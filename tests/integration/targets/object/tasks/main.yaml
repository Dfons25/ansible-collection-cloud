---
- module_defaults:
    opentelekomcloud.cloud.object:
      cloud: "{{ test_cloud }}"
  block:
    - name:
      set_fact:
        container_name: "test-container"
        first_object_name: "first-object"
        second_object_name: "second-object"
        path_file: ./
        content_file: testfile.txt
        dest: "./dest.txt"
        content_var:

    - name: Create file with content
      file:
        path: "{{ path_file }}/{{ content_file }}"
        state: touch

    - name: Write to file with content
      shell:
        chdir: "{{ path_file }}"
        cmd: "echo 'Some text.' > {{ content_file }}"

    - name: Create container and the first object
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        content: "{{ path_file }}/{{ content_file }}"
        ignore_nonexistent_container: true
        mode: create
      register: container

    - name: assert result
      assert:
        that:
          - container is success
          - container is changed

    - name: Create second object
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ second_object_name }}"
        content: "{{ path_file }}/{{ content_file }}"
        mode: create
      register: second_obj

    - name: assert result
      assert:
        that:
          - second_obj is success
          - second_obj is changed

    - name: Overwrite the first object with a content
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        content:
          obj:
            var1: 1
            var2: 2
        overwrite: true
        mode: create
      register: overwrt_first_object

    - name: assert result
      assert:
        that:
          - overwrt_first_object is success
          - overwrt_first_object is changed

    - name: Set object metadata
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        metadata: "content_encoding='utf-8'"
        mode: set-metadata
      register: obj_with_meta

    - name: assert result
      assert:
        that:
          - obj_with_meta is success
          - obj_with_meta is changed

    - name: Fetch object content to the terminal
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        mode: fetch
      register: fetched_content_tr

    - name: assert result
      assert:
        that:
          - fetched_content_tr is success
          - fetched_content_tr is changed

    - name: Fetch object content to the file
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        mode: fetch
        dest: "{{ dest }}"
      register: fetched_content_fl

    - name: assert result
      assert:
        that:
          - fetched_content_fl is success
          - fetched_content_fl is changed

    - name: Delete object metadata
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        mode: delete-metadata
        keys:
          - content_encoding
      register: obj_without_meta

    - name: assert result
      assert:
        that:
          - obj_without_meta is success
          - obj_without_meta is changed

    - name: Delete object
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        object: "{{ first_object_name }}"
        mode: delete
      register: deleted_obj

    - name: assert result
      assert:
        that:
          - deleted_obj is success
          - deleted_obj is changed

    - name: Delete container with left object
      opentelekomcloud.cloud.object:
        container: "{{ container_name }}"
        delete_with_all_objects: true
        mode: delete
      register: deleted_container

    - name: assert result
      assert:
        that:
          - deleted_obj is success
          - deleted_obj is changed

  always:
    - block:
        # Cleanup
      - name: Delete container with left object
        opentelekomcloud.cloud.object:
          container: "{{ container_name }}"
          delete_with_all_objects: true
          mode: delete

      - name: Delete file with content
        file:
          path: "{{ path_file }}/{{ content_file }}"
          state: absent

      - name: Delete file dest
        file:
          path: "{{ dest }}"
          state: absent
      ignore_errors: yes
